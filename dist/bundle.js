!function(F){var Q={};function c(U){if(Q[U])return Q[U].exports;var i=Q[U]={i:U,l:!1,exports:{}};return F[U].call(i.exports,i,i.exports,c),i.l=!0,i.exports}c.m=F,c.c=Q,c.d=function(F,Q,U){c.o(F,Q)||Object.defineProperty(F,Q,{enumerable:!0,get:U})},c.r=function(F){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(F,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(F,"__esModule",{value:!0})},c.t=function(F,Q){if(1&Q&&(F=c(F)),8&Q)return F;if(4&Q&&"object"==typeof F&&F&&F.__esModule)return F;var U=Object.create(null);if(c.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:F}),2&Q&&"string"!=typeof F)for(var i in F)c.d(U,i,function(Q){return F[Q]}.bind(null,i));return U},c.n=function(F){var Q=F&&F.__esModule?function(){return F.default}:function(){return F};return c.d(Q,"a",Q),Q},c.o=function(F,Q){return Object.prototype.hasOwnProperty.call(F,Q)},c.p="dist",c(c.s=0)}([function(F,Q,c){F.exports=c(1)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Autocomplete.ts\nclass Autocomplete {\r\n    constructor(text) {\r\n        this.value = text;\r\n        // console.log(this.value);\r\n    }\r\n    auto() {\r\n        return this.value;\r\n        console.log(this.value);\r\n    }\r\n}\r\n\n// CONCATENATED MODULE: ./src/index.ts\n\r\nvar countries = [\r\n    "Afghanistan",\r\n    "Albania",\r\n    "Algeria",\r\n    "Andorra",\r\n    "Angola",\r\n    "Anguilla",\r\n    "Antigua &amp; Barbuda",\r\n    "Argentina",\r\n    "Armenia",\r\n    "Aruba",\r\n    "Australia",\r\n    "Austria",\r\n    "Azerbaijan",\r\n    "Bahamas",\r\n    "Bahrain",\r\n    "Bangladesh",\r\n    "Barbados",\r\n    "Belarus",\r\n    "Belgium",\r\n    "Belize",\r\n    "Benin",\r\n    "Bermuda",\r\n    "Bhutan",\r\n    "Bolivia",\r\n    "Bosnia &amp; Herzegovina",\r\n    "Botswana",\r\n    "Brazil",\r\n    "British Virgin Islands",\r\n    "Brunei",\r\n    "Bulgaria",\r\n    "Burkina Faso",\r\n    "Burundi",\r\n    "Cambodia",\r\n    "Cameroon",\r\n    "Canada",\r\n    "Cape Verde",\r\n    "Cayman Islands",\r\n    "Central Arfrican Republic",\r\n    "Chad",\r\n    "Chile",\r\n    "China",\r\n    "Colombia",\r\n    "Congo",\r\n    "Cook Islands",\r\n    "Costa Rica",\r\n    "Cote D Ivoire",\r\n    "Croatia",\r\n    "Cuba",\r\n    "Curacao",\r\n    "Cyprus",\r\n    "Czech Republic",\r\n    "Denmark",\r\n    "Djibouti",\r\n    "Dominica",\r\n    "Dominican Republic",\r\n    "Ecuador",\r\n    "Egypt",\r\n    "El Salvador",\r\n    "Equatorial Guinea",\r\n    "Eritrea",\r\n    "Estonia",\r\n    "Ethiopia",\r\n    "Falkland Islands",\r\n    "Faroe Islands",\r\n    "Fiji",\r\n    "Finland",\r\n    "France",\r\n    "French Polynesia",\r\n    "French West Indies",\r\n    "Gabon",\r\n    "Gambia",\r\n    "Georgia",\r\n    "Germany",\r\n    "Ghana",\r\n    "Gibraltar",\r\n    "Greece",\r\n    "Greenland",\r\n    "Grenada",\r\n    "Guam",\r\n    "Guatemala",\r\n    "Guernsey",\r\n    "Guinea",\r\n    "Guinea Bissau",\r\n    "Guyana",\r\n    "Haiti",\r\n    "Honduras",\r\n    "Hong Kong",\r\n    "Hungary",\r\n    "Iceland",\r\n    "India",\r\n    "Indonesia",\r\n    "Iran",\r\n    "Iraq",\r\n    "Ireland",\r\n    "Isle of Man",\r\n    "Israel",\r\n    "Italy",\r\n    "Jamaica",\r\n    "Japan",\r\n    "Jersey",\r\n    "Jordan",\r\n    "Kazakhstan",\r\n    "Kenya",\r\n    "Kiribati",\r\n    "Kosovo",\r\n    "Kuwait",\r\n    "Kyrgyzstan",\r\n    "Laos",\r\n    "Latvia",\r\n    "Lebanon",\r\n    "Lesotho",\r\n    "Liberia",\r\n    "Libya",\r\n    "Liechtenstein",\r\n    "Lithuania",\r\n    "Luxembourg",\r\n    "Macau",\r\n    "Macedonia",\r\n    "Madagascar",\r\n    "Malawi",\r\n    "Malaysia",\r\n    "Maldives",\r\n    "Mali",\r\n    "Malta",\r\n    "Marshall Islands",\r\n    "Mauritania",\r\n    "Mauritius",\r\n    "Mexico",\r\n    "Micronesia",\r\n    "Moldova",\r\n    "Monaco",\r\n    "Mongolia",\r\n    "Montenegro",\r\n    "Montserrat",\r\n    "Morocco",\r\n    "Mozambique",\r\n    "Myanmar",\r\n    "Namibia",\r\n    "Nauro",\r\n    "Nepal",\r\n    "Netherlands",\r\n    "Netherlands Antilles",\r\n    "New Caledonia",\r\n    "New Zealand",\r\n    "Nicaragua",\r\n    "Niger",\r\n    "Nigeria",\r\n    "North Korea",\r\n    "Norway",\r\n    "Oman",\r\n    "Pakistan",\r\n    "Palau",\r\n    "Palestine",\r\n    "Panama",\r\n    "Papua New Guinea",\r\n    "Paraguay",\r\n    "Peru",\r\n    "Philippines",\r\n    "Poland",\r\n    "Portugal",\r\n    "Puerto Rico",\r\n    "Qatar",\r\n    "Reunion",\r\n    "Romania",\r\n    "Russia",\r\n    "Rwanda",\r\n    "Saint Pierre &amp; Miquelon",\r\n    "Samoa",\r\n    "San Marino",\r\n    "Sao Tome and Principe",\r\n    "Saudi Arabia",\r\n    "Senegal",\r\n    "Serbia",\r\n    "Seychelles",\r\n    "Sierra Leone",\r\n    "Singapore",\r\n    "Slovakia",\r\n    "Slovenia",\r\n    "Solomon Islands",\r\n    "Somalia",\r\n    "South Africa",\r\n    "South Korea",\r\n    "South Sudan",\r\n    "Spain",\r\n    "Sri Lanka",\r\n    "St Kitts &amp; Nevis",\r\n    "St Lucia",\r\n    "St Vincent",\r\n    "Sudan",\r\n    "Suriname",\r\n    "Swaziland",\r\n    "Sweden",\r\n    "Switzerland",\r\n    "Syria",\r\n    "Taiwan",\r\n    "Tajikistan",\r\n    "Tanzania",\r\n    "Thailand",\r\n    "Timor L\'Este",\r\n    "Togo",\r\n    "Tonga",\r\n    "Trinidad &amp; Tobago",\r\n    "Tunisia",\r\n    "Turkey",\r\n    "Turkmenistan",\r\n    "Turks &amp; Caicos",\r\n    "Tuvalu",\r\n    "Uganda",\r\n    "Ukraine",\r\n    "United Arab Emirates",\r\n    "United Kingdom",\r\n    "United States of America",\r\n    "Uruguay",\r\n    "Uzbekistan",\r\n    "Vanuatu",\r\n    "Vatican City",\r\n    "Venezuela",\r\n    "Vietnam",\r\n    "Virgin Islands (US)",\r\n    "Yemen",\r\n    "Zambia",\r\n    "Zimbabwe",\r\n];\r\nvar c = [];\r\nfor (let index in countries) {\r\n    var autocomplete = countries[index];\r\n    let obj = new Autocomplete(autocomplete);\r\n    c.push(obj.value);\r\n}\r\nconsole.log(c);\r\nconst app = document.querySelector("#country");\r\nconst div = document.getElementById("#autocomplete");\r\nconst autoDiv = document.getElementById("autocomplete-list");\r\nlet show = (country) => {\r\n    // console.log(apple.toString());\r\n    app.addEventListener("keyup", (e) => {\r\n        e.preventDefault();\r\n        const val = app.value;\r\n        // console.log(val);\r\n        autoDiv.innerHTML = "";\r\n        for (let index in country) {\r\n            var b = document.createElement("div");\r\n            if (country[index].substr(0, val.length).toUpperCase() === val.toUpperCase()) {\r\n                b.innerHTML =\r\n                    "<strong>" + country[index].substr(0, val.length) + "</strong>";\r\n                b.innerHTML += country[index].substr(val.length);\r\n                b.innerHTML += "<input type=\'hidden\' value=\'" + country[index] + "\'>";\r\n                b.addEventListener("click", (e) => {\r\n                    /*insert the value for the autocomplete text field:*/\r\n                    console.log(e.target.value);\r\n                    console.log(e.srcElement);\r\n                    app.value = autoDiv.getElementsByTagName("input")[index].value;\r\n                });\r\n                autoDiv.appendChild(b);\r\n            }\r\n        }\r\n    });\r\n};\r\nshow(c);\r\nconsole.log("Helloooo");\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')}]);